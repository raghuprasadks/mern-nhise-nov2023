Agenda:
1.Recap of React
2. Node -
3. Express - library built on node
api
4. Developing API

json-server
api

node.js


const http = require('node:http');
const hostname = '127.0.0.1';
const port = 3000;
const server = http.createServer((req, res) => {
  res.statusCode = 200;
  res.setHeader('Content-Type', 'text/plain');
  res.end('Hello World\n');
});
server.listen(port, hostname, () => {
  console.log(`Server running at http://${hostname}:${port}/`);
});

node .\1-gettingstarted.js

express.js

Express 4.18.1
Fast, unopinionated, minimalist web framework for Node.js


1. create expressdemo folder
2. open in visual studio code
3. npm init
it creates package.json
package.json
4. npm i express
node_modules folder is created 
and package.json is updated
with express module as a dependency
npm i -g nodemon

to run program
nodemon 1-gettingstarted.js

middleware

req- convert into json - response


Assignment on express:
Develop following api's for products displayed
in amazon.
Information to be captured
id,name,desc,supplier,price

API's

method url
get - http://localhost:8000/products
get - http://localhost:8000/products/id
post - http://localhost:8000/products
delete - http://localhost:8000/products/id
update - http://localhost:8000/products/id
get - http://localhost:8000/productsbysupplier/supplier
get - http://localhost:8000/productsbypricerange?min=minval&max=maxvalue

Router
usermangement - api/users
productmangement - api/products
ordermanagement -- api/products
suppliermangement -- api/suppliers
inventorymanagement -- api/inventory

middleware

- request - date time

npm i cors

var express = require('express')
var cors = require('cors')
var app = express()

app.use(cors())

app.get('/products/:id', function (req, res, next) {
  res.json({msg: 'This is CORS-enabled for all origins!'})
})

app.listen(80, function () {
  console.log('CORS-enabled web server listening on port 80')
})


















